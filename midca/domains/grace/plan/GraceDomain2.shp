(defdomain travel
 (
 (:method (achieve-goals (list ?goal . ?goals))
   ()
   ((achieve-goal ?goal)(achieve-goals list ?goals)))

 (:method (achieve-goals nil ?goal)
        ()
       ((achieve-goal ?goal)))

 (:method (achieve-goals list nil)
        ()
       ())

 (:method (achieve-goal (agent-at ?agent ?destX ?destY))

 ((agent-at ?agent ?origX ?origY)
 (call equal ?destX ?origX)
 (call equal ?destY ?origY))
 ()

 ((agent-at ?agent ?origX ?origY)
  (probability-at ?origX ?origY ?prob1)
 (call < ?destX ?origX )
 (not(call equal ?destX ?origX)))
 ((!movewest ?agent ?origX ?origY (call - ?origX 1) ?origY)
 (achieve-goal (agent-at ?agent ?destX ?destY)))

 ((agent-at ?agent ?origX ?origY)
 (call > ?destX ?origX)
 (not(call equal ?destX ?origX)))
 ((!moveeast ?agent ?origX ?origY (call + ?origX 1) ?origY)
 (achieve-goal (agent-at ?agent ?destX ?destY)))

 ((agent-at ?agent ?origX ?origY)
 (call equal ?destX ?origX)
 (call < ?destY ?origY))
 ((!movenorth ?agent ?origX ?origY ?origX (call - ?origY 1))
 (achieve-goal (agent-at ?agent ?destX ?destY)))

 ((agent-at ?agent ?origX ?origY)
 (call equal ?destX ?origX)
 (call > ?destY ?origY))
 ((!movesouth ?agent ?origX ?origY ?origX (call + ?origY 1))
 (achieve-goal (agent-at ?agent ?destX ?destY)))
 )

 (:operator (!moveeast ?agent ?startX ?startY ?destX ?destY)
 ((free ?agent) (agent-at ?agent ?startX ?startY) (adjacent-east ?startX ?startY ?destX ?destY))
 ((agent-at ?agent ?startX ?startY))
 ((agent-at ?agent ?destX ?destY)))

 (:operator (!movewest ?agent ?startX ?startY ?destX ?destY)
 ((free ?agent) (agent-at ?agent ?startX ?startY) (adjacent-west ?startX ?startY ?destX ?destY))
 ((agent-at ?agent ?startX ?startY))
 ((agent-at ?agent ?destX ?destY)))

 (:operator (!movenorth ?agent ?startX ?startY ?destX ?destY)
 ((free ?agent) (agent-at ?agent ?startX ?startY) (adjacent-north ?startX ?startY ?destX ?destY))
 ((agent-at ?agent ?startX ?startY))
 ((agent-at ?agent ?destX ?destY)))

 (:operator (!movesouth ?agent ?startX ?startY ?destX ?destY)
 ((free ?agent) (agent-at ?agent ?startX ?startY) (adjacent-south ?startX ?startY ?destX ?destY))
 ((agent-at ?agent ?startX ?startY))
 ((agent-at ?agent ?destX ?destY))) ))