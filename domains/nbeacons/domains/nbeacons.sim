# NBEACONS domain (adapted from marsworld)

type(DIM)
type(TILE)
type(AGENT)
type(BEACON)
type(BEACON-TYPE)

predicate(agent-at, [agnt, loc], [AGENT, TILE])
predicate(beacon-at, [bcn, loc], [BEACON, TILE])
predicate(beacon-type, [bcn, bcntyp], [BEACON, BEACON-TYPE])
predicate(activated, [bcn], [BEACON])
predicate(adjacent-north, [loc1, loc2], [TILE, TILE])
predicate(adjacent-south, [loc1, loc2], [TILE, TILE])
predicate(adjacent-east, [loc1, loc2], [TILE, TILE])
predicate(adjacent-west, [loc1, loc2], [TILE, TILE])

operator(movenorth,
args = [(agnt, AGENT), (start, TILE), (dest, TILE)],
preconditions = [
	condition(agent-at, [agnt, start]),
	condition(adjacent-north, [start, dest]),
	condition(adjacent-south, [dest, start])],
results = [
	condition(agent-at, [agnt, start], negate = TRUE),
	condition(agent-at, [agnt, dest])])

operator(movesouth,
args = [(agnt, AGENT), (start, TILE), (dest, TILE)],
preconditions = [
	condition(agent-at, [agnt, start]),
	condition(adjacent-south, [start, dest]),
	condition(adjacent-north, [dest, start])],
results = [
	condition(agent-at, [agnt, start], negate = TRUE),
	condition(agent-at, [agnt, dest])])

operator(moveeast,
args = [(agnt, AGENT), (start, TILE), (dest, TILE)],
preconditions = [
	condition(agent-at, [agnt, start]),
	condition(adjacent-east, [start, dest]),
	condition(adjacent-west, [dest, start])],
results = [
	condition(agent-at, [agnt, start], negate = TRUE),
	condition(agent-at, [agnt, dest])])

operator(movewest,
args = [(agnt, AGENT), (start, TILE), (dest, TILE)],
preconditions = [
	condition(agent-at, [agnt, start]),
	condition(adjacent-west, [start, dest]),
	condition(adjacent-east, [dest, start])],
results = [
	condition(agent-at, [agnt, start], negate = TRUE),
	condition(agent-at, [agnt, dest])])

operator(activatebeacon,
args = [(agnt, AGENT), (loc, TILE), (bcn, BEACON)],
preconditions = [
	condition(agent-at, [agnt, loc]),
	condition(beacon-at, [bcn, loc]),
	condition(activated, [bcn], negate = TRUE)],
results = [
	condition(activated, [bcn])])

# Note: this operator is not available to the agent via planning (i.e. pyhop)
operator(deactivatebeacon,
args = [(bcn, BEACON)],
preconditions = [
	condition(activated, [bcn])],
results = [
	condition(activated, [bcn], negate = TRUE)])
